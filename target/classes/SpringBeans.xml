<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
	http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx.xsd">

	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
			<value>classpath:com/epam/news/properties/database/connectionPool.properties
			</value>
		</property>
	</bean>


	<bean id="NewsService" class="com.epam.news.service.impl.NewsServiceImpl">
		<property name="dao" ref="NewsDaoJdbc" />
	</bean>

	<bean id="NewsDaoJdbc" class="com.epam.news.database.dao.NewsDaoJdbc">
		<constructor-arg type="com.epam.news.database.util.ConnectionPool"
			ref="connectionPool" />
	</bean>

	<bean id="NewsDaoHibernate" class="com.epam.news.database.dao.NewsDaoHibernate">
	</bean>

	<bean id="NewsDaoJpa" class="com.epam.news.database.dao.NewsDaoJpa">
	</bean>

	<bean id="connectionPool" class="com.epam.news.database.util.ConnectionPool"
		destroy-method="destroy">
		<constructor-arg type="java.lang.String" value="${jdbc.driver}" />
		<constructor-arg type="java.lang.String" value="${jdbc.url}" />
		<constructor-arg type="java.lang.String" value="${jdbc.user}" />
		<constructor-arg type="java.lang.String" value="${jdbc.password}" />
		<constructor-arg type="java.lang.Integer" value="${jdbc.size}" />
	</bean>

	<bean name="/ListNews" class="com.epam.news.presentation.action.NewsAction">
		<property name="service" ref="NewsService" />
	</bean>

	<bean name="/AddNews" class="com.epam.news.presentation.action.NewsAction">
		<property name="service" ref="NewsService" />
	</bean>
	
	<bean name="/EditNews" class="com.epam.news.presentation.action.NewsAction">
		<property name="service" ref="NewsService" />
	</bean>

	<bean name="/NewsView" class="com.epam.news.presentation.action.NewsAction">
		<property name="service" ref="NewsService" />
	</bean>

	<bean name="/CreateNews" class="com.epam.news.presentation.action.NewsAction">
		<property name="service" ref="NewsService" />
	</bean>

	<bean name="/DeleteNews" class="com.epam.news.presentation.action.NewsAction">
		<property name="service" ref="NewsService" />
	</bean>

	<bean name="/Locale" class="com.epam.news.presentation.action.NewsAction">
		<property name="service" ref="NewsService" />
	</bean>

	
	<bean id="dataSource" class = "com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="${jdbc.driver}" />
        <property name="jdbcUrl" value="${jdbc.url}" />
        <property name="user" value="${jdbc.user}" />
        <property name="password" value="${jdbc.password}" /> 
        <property name="minPoolSize" value="1" />
        <property name="maxPoolSize" value="10" />
 	</bean>

	<bean id="emf"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="packagesToScan" value="com.epam.news.model" />
		<property name="dataSource" ref="dataSource" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
		</property>
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.dialect">org.hibernate.dialect.Oracle10gDialect</prop>
			</props>
		</property>
	</bean>

	<bean id="txManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="emf" />
	</bean>
	
	<tx:annotation-driven transaction-manager="txManager" />

	<bean id="persistenceExceptionTranslationPostProcessor"
		class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />
	<bean
		class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />
</beans>

